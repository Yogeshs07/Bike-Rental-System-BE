// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rental_Services.Data;

namespace Rental_Services.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230301064157_fifth")]
    partial class fifth
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Rental_Services.Data.AuthDetails", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("InsertionDate")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsAccept")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LicenceImageUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Role")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("UserID");

                    b.ToTable("Authtable");
                });

            modelBuilder.Entity("Rental_Services.Data.BookingDetails", b =>
                {
                    b.Property<int>("BookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BookingDate")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Driver")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EmailID")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Hub")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("InsertionDate")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("IsActive")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Otp")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("OtpStatus")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("PricePerKm")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("TotalDistance")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("VehicleDescription")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("VehicleID")
                        .HasColumnType("int");

                    b.Property<string>("VehicleName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("BookingID");

                    b.ToTable("Bookingtable");
                });

            modelBuilder.Entity("Rental_Services.Data.HubDetails", b =>
                {
                    b.Property<int>("HubID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("HubName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("InsertionDate")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("HubID");

                    b.ToTable("Hubtable");
                });

            modelBuilder.Entity("Rental_Services.Data.ProfileDetails", b =>
                {
                    b.Property<int>("ProfileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EmailID")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Pincode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ProfileID");

                    b.ToTable("ProfileDetailstables");
                });

            modelBuilder.Entity("Rental_Services.Data.VehicleDetails", b =>
                {
                    b.Property<int>("VehicleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("InsertionDate")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("VehicleDescription")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("VehicleName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("VehicleID");

                    b.ToTable("Vehicletable");
                });
#pragma warning restore 612, 618
        }
    }
}
